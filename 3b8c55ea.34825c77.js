(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{145:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return s}));var n=a(2),r=a(9),l=(a(0),a(164)),b={id:"installation",title:"Installation"},o={id:"installation",title:"Installation",description:"This guide will walk through the steps required to bootstrap a running Kubernetes cluster with a highly available topology. You will learn and configure the CRI and CNI of your choice (assuming it is supported) and understand how to setup load balancing between your multi master cluster.",source:"@site/docs/installation.md",permalink:"/docs/installation",editUrl:"https://github.com/raspbernetes/docs/edit/master/website/docs/installation.md",sidebar:"someSidebar",previous:{title:"Contributing",permalink:"/docs/doc3"},next:{title:"Architecture",permalink:"/docs/architecture"}},i=[{value:"Repository Structure",id:"repository-structure",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Lets Begin",id:"lets-begin",children:[]},{value:"Container Runtime Interface",id:"container-runtime-interface",children:[]},{value:"Container Network Interace",id:"container-network-interace",children:[]},{value:"Network topology",id:"network-topology",children:[]}],c={rightToc:i};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"This guide will walk through the steps required to bootstrap a running Kubernetes cluster with a highly available topology. You will learn and configure the CRI and CNI of your choice (assuming it is supported) and understand how to setup load balancing between your multi master cluster."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Note: If you wish to use Raspbian Lite please use the following ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"raspbian/README.md"}),"guide"),".")),Object(l.b)("h2",{id:"repository-structure"},"Repository Structure"),Object(l.b)("p",null,"The repository used to install kubernetes can be found here: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/raspbernetes/k8s-cluster-installation"}),"https://github.com/raspbernetes/k8s-cluster-installation")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),".\n\u251c\u2500\u2500 .github     # Github workflows and CODEOWNERS files\n\u251c\u2500\u2500 ansible     # Ansible playbook to run after the RPis have been flashed\n\u251c\u2500\u2500 cloudflare  # k8s resources for cloudflare auth healthcheck configuration\n\u251c\u2500\u2500 docs        # Documentation\n\u251c\u2500\u2500 rasbian     # k8s bootstrap scripts (deprecated)\n\u2514\u2500\u2500 setup       # Cloud init scripts used to flash RPis\n")),Object(l.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(l.b)("p",null,"Prior to getting started you will need to have several things done first. Assuming you already have the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#Hardware"}),"hardware")," available, you will need to do the following:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Flash OS onto SD card. Guide ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"setup/README.md"}),"Here")),Object(l.b)("li",{parentName:"ol"},"Install Ansible. Download ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html"}),"Here")),Object(l.b)("li",{parentName:"ol"},"SSH connectivity to each node. (Step 1 requires you setup SSH keys)")),Object(l.b)("h2",{id:"lets-begin"},"Lets Begin"),Object(l.b)("p",null,"Once the Raspberry Pi's are running and all the prerequisites have been completed we're now ready to setup the Ansible inventory."),Object(l.b)("p",null,"Open the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"ansible/inventory"}),"inventory file")," - each machine that will be joining the Kubernetes cluster must be defined as either a master or worker node. To leverage the highly available topology configuration you would ideally have 3 masters available as a minimum, otherwise 1 master node is fine, however, it won't be highly available."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Note: Ensure the ",Object(l.b)("inlineCode",{parentName:"p"},"hostname")," matches what the machine was given when flashed the SD card and ",Object(l.b)("inlineCode",{parentName:"p"},"ansible_host")," matches the IP allocated to the host on your preferred subnet.")),Object(l.b)("p",null,"When the inventory has been configured with all the hosts that will be joining the Kubernetes cluster we can run the following command to verify SSH connectivity can be established."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"ansible all -m ping -i ansible/inventory -u pi\n")),Object(l.b)("p",null,"A successful response should look something like the following:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-diff"}),'k8s-worker-01 | SUCCESS => {\n  ...\n  "changed": false,\n  "ping": "pong"\n  ...\n}\n')),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Note: If your output returns success for each ping then you can continue, otherwise there may be some misconfiguration of either the inventory file, or network connectivity issues.")),Object(l.b)("p",null,"There are a variety of different configurable options in the Ansible automation. These options can be located in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"ansible/vars.yml"}),"vars.yml")," file."),Object(l.b)("h2",{id:"container-runtime-interface"},"Container Runtime Interface"),Object(l.b)("p",null,"Below is a matrix of the currently supported options."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Container Runtime")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Supported"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Docker"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Yes")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ContainerD"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Yes")))),Object(l.b)("h2",{id:"container-network-interace"},"Container Network Interace"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Container Network Interface")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Supported"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Weave"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Yes")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Flannel"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Yes")))),Object(l.b)("p",null,"Assuming all previous steps and configuration are correct the last thing to do is to execute the playbook. The playbook that should be used is the ",Object(l.b)("inlineCode",{parentName:"p"},"k8s-all.yml")," playbook, this will handle all the master and worker node logic and sequencing."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"env ANSIBLE_CONFIG=ansible.cfg ansible-playbook \\\n    -i ansible/inventory \\\n    ansible/playbooks/k8s-all.yml\n")),Object(l.b)("p",null,"If there was no errors you should be able to execute the following command to check the status of the nodes in the cluster:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"k get nodes --kubeconfig ansible/playbooks/output/k8s-config.yaml\n")),Object(l.b)("p",null,"Output:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"NAME            STATUS     ROLES    AGE     VERSION\nk8s-master-01   Ready      master   4m45s   v1.17.4\nk8s-master-02   Ready      master   70s     v1.17.4\nk8s-master-03   Ready      master   79s     v1.17.4\nk8s-worker-01   Ready      <none>   16s     v1.17.4\n")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Congratulations!")," you have successfully started your own Kubernetes cluster!"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"If you weren't lucky enough to have everything successful on the first attempt please open an ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/raspbernetes/k8s-cluster-installation/issues/new"}),"issue")," with as much context and we'll try to solve and improve for future people.")),Object(l.b)("h2",{id:"network-topology"},"Network topology"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"IP"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Function"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"192.168.1.1"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"Router")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"192.168.1.121"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"master (k8s-master-01)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"192.168.1.122"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"master (k8s-master-02)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"192.168.1.123"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"master (k8s-master-03)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"192.168.1.131"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"worker (k8s-worker-01)")))))}s.isMDXComponent=!0}}]);